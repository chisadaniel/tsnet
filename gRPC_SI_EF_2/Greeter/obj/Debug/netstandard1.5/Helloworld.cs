// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: helloworld.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Helloworld {

  /// <summary>Holder for reflection information generated from helloworld.proto</summary>
  public static partial class HelloworldReflection {

    #region Descriptor
    /// <summary>File descriptor for helloworld.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HelloworldReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBoZWxsb3dvcmxkLnByb3RvEgpoZWxsb3dvcmxkIhwKDEhlbGxvUmVxdWVz",
            "dBIMCgRuYW1lGAEgASgJIh0KCkhlbGxvUmVwbHkSDwoHbWVzc2FnZRgBIAEo",
            "CSJSCgdQb3N0RFRPEg4KBlBvc3RJZBgBIAEoBRITCgtEZXNjcmlwdGlvbhgC",
            "IAEoCRIOCgZEb21haW4YAyABKAkSEgoKQ29tbWVudHNJZBgEIAMoBSI4ChJQ",
            "b3N0RFRPQ29sbGVuY3Rpb24SIgoFUG9zdHMYASADKAsyEy5oZWxsb3dvcmxk",
            "LlBvc3REVE8iPQoKQ29tbWVudERUTxIRCglDb21tZW50SWQYASABKAUSDAoE",
            "VGV4dBgCIAEoCRIOCgZQb3N0SWQYAyABKAUiQAoUQ29tbWVudERUT0NvbGxl",
            "Y3Rpb24SKAoIY29tbWVudHMYASADKAsyFi5oZWxsb3dvcmxkLkNvbW1lbnRE",
            "VE8iHQoPT2JqZWN0SWRSZXF1ZXN0EgoKAklkGAEgASgFIiQKDVN0cmluZ1Jl",
            "cXVlc3QSEwoLU3RyaW5nUGFyYW0YASABKAkiGgoJQm9vbFJlcGx5Eg0KBXJl",
            "cGx5GAEgASgIIksKEENvbW1lbnRBbmRQb3N0SWQSDgoGUG9zdElkGAEgASgF",
            "EicKB2NvbW1lbnQYAiABKAsyFi5oZWxsb3dvcmxkLkNvbW1lbnREVE8iYAoU",
            "VXBkYXRlQ29tbWVudE1lc3NhZ2USIwoDb2xkGAEgASgLMhYuaGVsbG93b3Js",
            "ZC5Db21tZW50RFRPEiMKA25ldxgCIAEoCzIWLmhlbGxvd29ybGQuQ29tbWVu",
            "dERUTyIOCgxFbXB0eU1lc3NhZ2UywwcKB0dyZWV0ZXISPgoIU2F5SGVsbG8S",
            "GC5oZWxsb3dvcmxkLkhlbGxvUmVxdWVzdBoWLmhlbGxvd29ybGQuSGVsbG9S",
            "ZXBseSIAEkMKDVNheUhlbGxvQWdhaW4SGC5oZWxsb3dvcmxkLkhlbGxvUmVx",
            "dWVzdBoWLmhlbGxvd29ybGQuSGVsbG9SZXBseSIAEj8KC0dldFBvc3RCeUlk",
            "EhsuaGVsbG93b3JsZC5PYmplY3RJZFJlcXVlc3QaEy5oZWxsb3dvcmxkLlBv",
            "c3REVE8SQAoOR2V0UG9zdEJ5VGl0bGUSGS5oZWxsb3dvcmxkLlN0cmluZ1Jl",
            "cXVlc3QaEy5oZWxsb3dvcmxkLlBvc3REVE8SNgoKU3VibWl0UG9zdBITLmhl",
            "bGxvd29ybGQuUG9zdERUTxoTLmhlbGxvd29ybGQuUG9zdERUTxI2CgpVcGRh",
            "dGVQb3N0EhMuaGVsbG93b3JsZC5Qb3N0RFRPGhMuaGVsbG93b3JsZC5Qb3N0",
            "RFRPEkAKCkRlbGV0ZVBvc3QSGy5oZWxsb3dvcmxkLk9iamVjdElkUmVxdWVz",
            "dBoVLmhlbGxvd29ybGQuQm9vbFJlcGx5EkcKC0dldEFsbFBvc3RzEhguaGVs",
            "bG93b3JsZC5FbXB0eU1lc3NhZ2UaHi5oZWxsb3dvcmxkLlBvc3REVE9Db2xs",
            "ZW5jdGlvbhJFCg5HZXRDb21tZW50QnlJZBIbLmhlbGxvd29ybGQuT2JqZWN0",
            "SWRSZXF1ZXN0GhYuaGVsbG93b3JsZC5Db21tZW50RFRPEj8KDVN1Ym1pdENv",
            "bW1lbnQSFi5oZWxsb3dvcmxkLkNvbW1lbnREVE8aFi5oZWxsb3dvcmxkLkNv",
            "bW1lbnREVE8SQgoKQWRkQ29tbWVudBIcLmhlbGxvd29ybGQuQ29tbWVudEFu",
            "ZFBvc3RJZBoWLmhlbGxvd29ybGQuQ29tbWVudERUTxJJCg1VcGRhdGVDb21t",
            "ZW50EiAuaGVsbG93b3JsZC5VcGRhdGVDb21tZW50TWVzc2FnZRoWLmhlbGxv",
            "d29ybGQuQ29tbWVudERUTxJDCg1EZWxldGVDb21tZW50EhsuaGVsbG93b3Js",
            "ZC5PYmplY3RJZFJlcXVlc3QaFS5oZWxsb3dvcmxkLkJvb2xSZXBseRJZChhH",
            "ZXRBbGxQb3N0UmVsYXRlQ29tbWVudHMSGy5oZWxsb3dvcmxkLk9iamVjdElk",
            "UmVxdWVzdBogLmhlbGxvd29ybGQuQ29tbWVudERUT0NvbGxlY3Rpb25CNgob",
            "aW8uZ3JwYy5leGFtcGxlcy5oZWxsb3dvcmxkQg9IZWxsb1dvcmxkUHJvdG9Q",
            "AaICA0hMV2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Helloworld.HelloRequest), global::Helloworld.HelloRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Helloworld.HelloReply), global::Helloworld.HelloReply.Parser, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Helloworld.PostDTO), global::Helloworld.PostDTO.Parser, new[]{ "PostId", "Description", "Domain", "CommentsId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Helloworld.PostDTOCollenction), global::Helloworld.PostDTOCollenction.Parser, new[]{ "Posts" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Helloworld.CommentDTO), global::Helloworld.CommentDTO.Parser, new[]{ "CommentId", "Text", "PostId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Helloworld.CommentDTOCollection), global::Helloworld.CommentDTOCollection.Parser, new[]{ "Comments" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Helloworld.ObjectIdRequest), global::Helloworld.ObjectIdRequest.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Helloworld.StringRequest), global::Helloworld.StringRequest.Parser, new[]{ "StringParam" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Helloworld.BoolReply), global::Helloworld.BoolReply.Parser, new[]{ "Reply" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Helloworld.CommentAndPostId), global::Helloworld.CommentAndPostId.Parser, new[]{ "PostId", "Comment" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Helloworld.UpdateCommentMessage), global::Helloworld.UpdateCommentMessage.Parser, new[]{ "Old", "New" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Helloworld.EmptyMessage), global::Helloworld.EmptyMessage.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The request message containing the user's name.
  /// </summary>
  public sealed partial class HelloRequest : pb::IMessage<HelloRequest> {
    private static readonly pb::MessageParser<HelloRequest> _parser = new pb::MessageParser<HelloRequest>(() => new HelloRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HelloRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Helloworld.HelloworldReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloRequest(HelloRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloRequest Clone() {
      return new HelloRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HelloRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HelloRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HelloRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The response message containing the greetings
  /// </summary>
  public sealed partial class HelloReply : pb::IMessage<HelloReply> {
    private static readonly pb::MessageParser<HelloReply> _parser = new pb::MessageParser<HelloReply>(() => new HelloReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HelloReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Helloworld.HelloworldReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloReply(HelloReply other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloReply Clone() {
      return new HelloReply(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HelloReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HelloReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HelloReply other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostDTO : pb::IMessage<PostDTO> {
    private static readonly pb::MessageParser<PostDTO> _parser = new pb::MessageParser<PostDTO>(() => new PostDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Helloworld.HelloworldReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDTO(PostDTO other) : this() {
      postId_ = other.postId_;
      description_ = other.description_;
      domain_ = other.domain_;
      commentsId_ = other.commentsId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDTO Clone() {
      return new PostDTO(this);
    }

    /// <summary>Field number for the "PostId" field.</summary>
    public const int PostIdFieldNumber = 1;
    private int postId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PostId {
      get { return postId_; }
      set {
        postId_ = value;
      }
    }

    /// <summary>Field number for the "Description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Domain" field.</summary>
    public const int DomainFieldNumber = 3;
    private string domain_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Domain {
      get { return domain_; }
      set {
        domain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CommentsId" field.</summary>
    public const int CommentsIdFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_commentsId_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> commentsId_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CommentsId {
      get { return commentsId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PostId != other.PostId) return false;
      if (Description != other.Description) return false;
      if (Domain != other.Domain) return false;
      if(!commentsId_.Equals(other.commentsId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PostId != 0) hash ^= PostId.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Domain.Length != 0) hash ^= Domain.GetHashCode();
      hash ^= commentsId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PostId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PostId);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (Domain.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Domain);
      }
      commentsId_.WriteTo(output, _repeated_commentsId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PostId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PostId);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Domain.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Domain);
      }
      size += commentsId_.CalculateSize(_repeated_commentsId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostDTO other) {
      if (other == null) {
        return;
      }
      if (other.PostId != 0) {
        PostId = other.PostId;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Domain.Length != 0) {
        Domain = other.Domain;
      }
      commentsId_.Add(other.commentsId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PostId = input.ReadInt32();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            Domain = input.ReadString();
            break;
          }
          case 34:
          case 32: {
            commentsId_.AddEntriesFrom(input, _repeated_commentsId_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostDTOCollenction : pb::IMessage<PostDTOCollenction> {
    private static readonly pb::MessageParser<PostDTOCollenction> _parser = new pb::MessageParser<PostDTOCollenction>(() => new PostDTOCollenction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostDTOCollenction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Helloworld.HelloworldReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDTOCollenction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDTOCollenction(PostDTOCollenction other) : this() {
      posts_ = other.posts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDTOCollenction Clone() {
      return new PostDTOCollenction(this);
    }

    /// <summary>Field number for the "Posts" field.</summary>
    public const int PostsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Helloworld.PostDTO> _repeated_posts_codec
        = pb::FieldCodec.ForMessage(10, global::Helloworld.PostDTO.Parser);
    private readonly pbc::RepeatedField<global::Helloworld.PostDTO> posts_ = new pbc::RepeatedField<global::Helloworld.PostDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Helloworld.PostDTO> Posts {
      get { return posts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostDTOCollenction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostDTOCollenction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!posts_.Equals(other.posts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= posts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      posts_.WriteTo(output, _repeated_posts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += posts_.CalculateSize(_repeated_posts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostDTOCollenction other) {
      if (other == null) {
        return;
      }
      posts_.Add(other.posts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            posts_.AddEntriesFrom(input, _repeated_posts_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommentDTO : pb::IMessage<CommentDTO> {
    private static readonly pb::MessageParser<CommentDTO> _parser = new pb::MessageParser<CommentDTO>(() => new CommentDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommentDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Helloworld.HelloworldReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentDTO(CommentDTO other) : this() {
      commentId_ = other.commentId_;
      text_ = other.text_;
      postId_ = other.postId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentDTO Clone() {
      return new CommentDTO(this);
    }

    /// <summary>Field number for the "CommentId" field.</summary>
    public const int CommentIdFieldNumber = 1;
    private int commentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CommentId {
      get { return commentId_; }
      set {
        commentId_ = value;
      }
    }

    /// <summary>Field number for the "Text" field.</summary>
    public const int TextFieldNumber = 2;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PostId" field.</summary>
    public const int PostIdFieldNumber = 3;
    private int postId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PostId {
      get { return postId_; }
      set {
        postId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommentDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommentDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CommentId != other.CommentId) return false;
      if (Text != other.Text) return false;
      if (PostId != other.PostId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CommentId != 0) hash ^= CommentId.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (PostId != 0) hash ^= PostId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CommentId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CommentId);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (PostId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PostId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CommentId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CommentId);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (PostId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PostId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommentDTO other) {
      if (other == null) {
        return;
      }
      if (other.CommentId != 0) {
        CommentId = other.CommentId;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.PostId != 0) {
        PostId = other.PostId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CommentId = input.ReadInt32();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
          case 24: {
            PostId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommentDTOCollection : pb::IMessage<CommentDTOCollection> {
    private static readonly pb::MessageParser<CommentDTOCollection> _parser = new pb::MessageParser<CommentDTOCollection>(() => new CommentDTOCollection());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommentDTOCollection> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Helloworld.HelloworldReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentDTOCollection() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentDTOCollection(CommentDTOCollection other) : this() {
      comments_ = other.comments_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentDTOCollection Clone() {
      return new CommentDTOCollection(this);
    }

    /// <summary>Field number for the "comments" field.</summary>
    public const int CommentsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Helloworld.CommentDTO> _repeated_comments_codec
        = pb::FieldCodec.ForMessage(10, global::Helloworld.CommentDTO.Parser);
    private readonly pbc::RepeatedField<global::Helloworld.CommentDTO> comments_ = new pbc::RepeatedField<global::Helloworld.CommentDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Helloworld.CommentDTO> Comments {
      get { return comments_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommentDTOCollection);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommentDTOCollection other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!comments_.Equals(other.comments_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= comments_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      comments_.WriteTo(output, _repeated_comments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += comments_.CalculateSize(_repeated_comments_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommentDTOCollection other) {
      if (other == null) {
        return;
      }
      comments_.Add(other.comments_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            comments_.AddEntriesFrom(input, _repeated_comments_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ObjectIdRequest : pb::IMessage<ObjectIdRequest> {
    private static readonly pb::MessageParser<ObjectIdRequest> _parser = new pb::MessageParser<ObjectIdRequest>(() => new ObjectIdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjectIdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Helloworld.HelloworldReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectIdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectIdRequest(ObjectIdRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectIdRequest Clone() {
      return new ObjectIdRequest(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjectIdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjectIdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjectIdRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StringRequest : pb::IMessage<StringRequest> {
    private static readonly pb::MessageParser<StringRequest> _parser = new pb::MessageParser<StringRequest>(() => new StringRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StringRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Helloworld.HelloworldReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringRequest(StringRequest other) : this() {
      stringParam_ = other.stringParam_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringRequest Clone() {
      return new StringRequest(this);
    }

    /// <summary>Field number for the "StringParam" field.</summary>
    public const int StringParamFieldNumber = 1;
    private string stringParam_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StringParam {
      get { return stringParam_; }
      set {
        stringParam_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StringRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StringRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StringParam != other.StringParam) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StringParam.Length != 0) hash ^= StringParam.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StringParam.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StringParam);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StringParam.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StringParam);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StringRequest other) {
      if (other == null) {
        return;
      }
      if (other.StringParam.Length != 0) {
        StringParam = other.StringParam;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StringParam = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BoolReply : pb::IMessage<BoolReply> {
    private static readonly pb::MessageParser<BoolReply> _parser = new pb::MessageParser<BoolReply>(() => new BoolReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BoolReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Helloworld.HelloworldReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolReply(BoolReply other) : this() {
      reply_ = other.reply_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolReply Clone() {
      return new BoolReply(this);
    }

    /// <summary>Field number for the "reply" field.</summary>
    public const int ReplyFieldNumber = 1;
    private bool reply_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Reply {
      get { return reply_; }
      set {
        reply_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BoolReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BoolReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Reply != other.Reply) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Reply != false) hash ^= Reply.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Reply != false) {
        output.WriteRawTag(8);
        output.WriteBool(Reply);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Reply != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BoolReply other) {
      if (other == null) {
        return;
      }
      if (other.Reply != false) {
        Reply = other.Reply;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Reply = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommentAndPostId : pb::IMessage<CommentAndPostId> {
    private static readonly pb::MessageParser<CommentAndPostId> _parser = new pb::MessageParser<CommentAndPostId>(() => new CommentAndPostId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommentAndPostId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Helloworld.HelloworldReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentAndPostId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentAndPostId(CommentAndPostId other) : this() {
      postId_ = other.postId_;
      comment_ = other.comment_ != null ? other.comment_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentAndPostId Clone() {
      return new CommentAndPostId(this);
    }

    /// <summary>Field number for the "PostId" field.</summary>
    public const int PostIdFieldNumber = 1;
    private int postId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PostId {
      get { return postId_; }
      set {
        postId_ = value;
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 2;
    private global::Helloworld.CommentDTO comment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Helloworld.CommentDTO Comment {
      get { return comment_; }
      set {
        comment_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommentAndPostId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommentAndPostId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PostId != other.PostId) return false;
      if (!object.Equals(Comment, other.Comment)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PostId != 0) hash ^= PostId.GetHashCode();
      if (comment_ != null) hash ^= Comment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PostId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PostId);
      }
      if (comment_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PostId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PostId);
      }
      if (comment_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommentAndPostId other) {
      if (other == null) {
        return;
      }
      if (other.PostId != 0) {
        PostId = other.PostId;
      }
      if (other.comment_ != null) {
        if (comment_ == null) {
          Comment = new global::Helloworld.CommentDTO();
        }
        Comment.MergeFrom(other.Comment);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PostId = input.ReadInt32();
            break;
          }
          case 18: {
            if (comment_ == null) {
              Comment = new global::Helloworld.CommentDTO();
            }
            input.ReadMessage(Comment);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateCommentMessage : pb::IMessage<UpdateCommentMessage> {
    private static readonly pb::MessageParser<UpdateCommentMessage> _parser = new pb::MessageParser<UpdateCommentMessage>(() => new UpdateCommentMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateCommentMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Helloworld.HelloworldReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCommentMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCommentMessage(UpdateCommentMessage other) : this() {
      old_ = other.old_ != null ? other.old_.Clone() : null;
      new_ = other.new_ != null ? other.new_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCommentMessage Clone() {
      return new UpdateCommentMessage(this);
    }

    /// <summary>Field number for the "old" field.</summary>
    public const int OldFieldNumber = 1;
    private global::Helloworld.CommentDTO old_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Helloworld.CommentDTO Old {
      get { return old_; }
      set {
        old_ = value;
      }
    }

    /// <summary>Field number for the "new" field.</summary>
    public const int NewFieldNumber = 2;
    private global::Helloworld.CommentDTO new_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Helloworld.CommentDTO New {
      get { return new_; }
      set {
        new_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateCommentMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateCommentMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Old, other.Old)) return false;
      if (!object.Equals(New, other.New)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (old_ != null) hash ^= Old.GetHashCode();
      if (new_ != null) hash ^= New.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (old_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Old);
      }
      if (new_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(New);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (old_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Old);
      }
      if (new_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(New);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateCommentMessage other) {
      if (other == null) {
        return;
      }
      if (other.old_ != null) {
        if (old_ == null) {
          Old = new global::Helloworld.CommentDTO();
        }
        Old.MergeFrom(other.Old);
      }
      if (other.new_ != null) {
        if (new_ == null) {
          New = new global::Helloworld.CommentDTO();
        }
        New.MergeFrom(other.New);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (old_ == null) {
              Old = new global::Helloworld.CommentDTO();
            }
            input.ReadMessage(Old);
            break;
          }
          case 18: {
            if (new_ == null) {
              New = new global::Helloworld.CommentDTO();
            }
            input.ReadMessage(New);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EmptyMessage : pb::IMessage<EmptyMessage> {
    private static readonly pb::MessageParser<EmptyMessage> _parser = new pb::MessageParser<EmptyMessage>(() => new EmptyMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EmptyMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Helloworld.HelloworldReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyMessage(EmptyMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyMessage Clone() {
      return new EmptyMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EmptyMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EmptyMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EmptyMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
