//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IMediaProperties")]
public interface IMediaProperties
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMediaProperties/InsertColection", ReplyAction="http://tempuri.org/InterfaceMediaProperties/InsertColectionResponse")]
    void InsertColection(string[] mediaObjects);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMediaProperties/InsertColection", ReplyAction="http://tempuri.org/InterfaceMediaProperties/InsertColectionResponse")]
    System.Threading.Tasks.Task InsertColectionAsync(string[] mediaObjects);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMediaProperties/InsertProperty", ReplyAction="http://tempuri.org/InterfaceMediaProperties/InsertPropertyResponse")]
    void InsertProperty(string name, string property);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMediaProperties/InsertProperty", ReplyAction="http://tempuri.org/InterfaceMediaProperties/InsertPropertyResponse")]
    System.Threading.Tasks.Task InsertPropertyAsync(string name, string property);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMediaProperties/GetAll", ReplyAction="http://tempuri.org/InterfaceMediaProperties/GetAllResponse")]
    string[] GetAll();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMediaProperties/GetAll", ReplyAction="http://tempuri.org/InterfaceMediaProperties/GetAllResponse")]
    System.Threading.Tasks.Task<string[]> GetAllAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMediaProperties/GetVideos", ReplyAction="http://tempuri.org/InterfaceMediaProperties/GetVideosResponse")]
    string[] GetVideos();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMediaProperties/GetVideos", ReplyAction="http://tempuri.org/InterfaceMediaProperties/GetVideosResponse")]
    System.Threading.Tasks.Task<string[]> GetVideosAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMediaProperties/GetDescpritionsOfAnItem", ReplyAction="http://tempuri.org/InterfaceMediaProperties/GetDescpritionsOfAnItemResponse")]
    string[] GetDescpritionsOfAnItem(string name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMediaProperties/GetDescpritionsOfAnItem", ReplyAction="http://tempuri.org/InterfaceMediaProperties/GetDescpritionsOfAnItemResponse")]
    System.Threading.Tasks.Task<string[]> GetDescpritionsOfAnItemAsync(string name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMediaProperties/AddNewDescription", ReplyAction="http://tempuri.org/InterfaceMediaProperties/AddNewDescriptionResponse")]
    int AddNewDescription(string name, string property);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMediaProperties/AddNewDescription", ReplyAction="http://tempuri.org/InterfaceMediaProperties/AddNewDescriptionResponse")]
    System.Threading.Tasks.Task<int> AddNewDescriptionAsync(string name, string property);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMediaProperties/UpdateDescription", ReplyAction="http://tempuri.org/InterfaceMediaProperties/UpdateDescriptionResponse")]
    void UpdateDescription(string name, string old_description, string new_description);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMediaProperties/UpdateDescription", ReplyAction="http://tempuri.org/InterfaceMediaProperties/UpdateDescriptionResponse")]
    System.Threading.Tasks.Task UpdateDescriptionAsync(string name, string old_description, string new_description);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMediaProperties/DeleteDescriptionOfItem", ReplyAction="http://tempuri.org/InterfaceMediaProperties/DeleteDescriptionOfItemResponse")]
    void DeleteDescriptionOfItem(string name, string description);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMediaProperties/DeleteDescriptionOfItem", ReplyAction="http://tempuri.org/InterfaceMediaProperties/DeleteDescriptionOfItemResponse")]
    System.Threading.Tasks.Task DeleteDescriptionOfItemAsync(string name, string description);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMediaProperties/GetElementFromSearch", ReplyAction="http://tempuri.org/InterfaceMediaProperties/GetElementFromSearchResponse")]
    string[] GetElementFromSearch(string search_text);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMediaProperties/GetElementFromSearch", ReplyAction="http://tempuri.org/InterfaceMediaProperties/GetElementFromSearchResponse")]
    System.Threading.Tasks.Task<string[]> GetElementFromSearchAsync(string search_text);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMediaProperties/DeleteElementFromDb", ReplyAction="http://tempuri.org/InterfaceMediaProperties/DeleteElementFromDbResponse")]
    void DeleteElementFromDb(string name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMediaProperties/DeleteElementFromDb", ReplyAction="http://tempuri.org/InterfaceMediaProperties/DeleteElementFromDbResponse")]
    System.Threading.Tasks.Task DeleteElementFromDbAsync(string name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMediaProperties/GetWarnings", ReplyAction="http://tempuri.org/InterfaceMediaProperties/GetWarningsResponse")]
    string[] GetWarnings();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMediaProperties/GetWarnings", ReplyAction="http://tempuri.org/InterfaceMediaProperties/GetWarningsResponse")]
    System.Threading.Tasks.Task<string[]> GetWarningsAsync();
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IMediaPropertiesChannel : IMediaProperties, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class MediaPropertiesClient : System.ServiceModel.ClientBase<IMediaProperties>, IMediaProperties
{
    
    public MediaPropertiesClient()
    {
    }
    
    public MediaPropertiesClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public MediaPropertiesClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public MediaPropertiesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public MediaPropertiesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public void InsertColection(string[] mediaObjects)
    {
        base.Channel.InsertColection(mediaObjects);
    }
    
    public System.Threading.Tasks.Task InsertColectionAsync(string[] mediaObjects)
    {
        return base.Channel.InsertColectionAsync(mediaObjects);
    }
    
    public void InsertProperty(string name, string property)
    {
        base.Channel.InsertProperty(name, property);
    }
    
    public System.Threading.Tasks.Task InsertPropertyAsync(string name, string property)
    {
        return base.Channel.InsertPropertyAsync(name, property);
    }
    
    public string[] GetAll()
    {
        return base.Channel.GetAll();
    }
    
    public System.Threading.Tasks.Task<string[]> GetAllAsync()
    {
        return base.Channel.GetAllAsync();
    }
    
    public string[] GetVideos()
    {
        return base.Channel.GetVideos();
    }
    
    public System.Threading.Tasks.Task<string[]> GetVideosAsync()
    {
        return base.Channel.GetVideosAsync();
    }
    
    public string[] GetDescpritionsOfAnItem(string name)
    {
        return base.Channel.GetDescpritionsOfAnItem(name);
    }
    
    public System.Threading.Tasks.Task<string[]> GetDescpritionsOfAnItemAsync(string name)
    {
        return base.Channel.GetDescpritionsOfAnItemAsync(name);
    }
    
    public int AddNewDescription(string name, string property)
    {
        return base.Channel.AddNewDescription(name, property);
    }
    
    public System.Threading.Tasks.Task<int> AddNewDescriptionAsync(string name, string property)
    {
        return base.Channel.AddNewDescriptionAsync(name, property);
    }
    
    public void UpdateDescription(string name, string old_description, string new_description)
    {
        base.Channel.UpdateDescription(name, old_description, new_description);
    }
    
    public System.Threading.Tasks.Task UpdateDescriptionAsync(string name, string old_description, string new_description)
    {
        return base.Channel.UpdateDescriptionAsync(name, old_description, new_description);
    }
    
    public void DeleteDescriptionOfItem(string name, string description)
    {
        base.Channel.DeleteDescriptionOfItem(name, description);
    }
    
    public System.Threading.Tasks.Task DeleteDescriptionOfItemAsync(string name, string description)
    {
        return base.Channel.DeleteDescriptionOfItemAsync(name, description);
    }
    
    public string[] GetElementFromSearch(string search_text)
    {
        return base.Channel.GetElementFromSearch(search_text);
    }
    
    public System.Threading.Tasks.Task<string[]> GetElementFromSearchAsync(string search_text)
    {
        return base.Channel.GetElementFromSearchAsync(search_text);
    }
    
    public void DeleteElementFromDb(string name)
    {
        base.Channel.DeleteElementFromDb(name);
    }
    
    public System.Threading.Tasks.Task DeleteElementFromDbAsync(string name)
    {
        return base.Channel.DeleteElementFromDbAsync(name);
    }
    
    public string[] GetWarnings()
    {
        return base.Channel.GetWarnings();
    }
    
    public System.Threading.Tasks.Task<string[]> GetWarningsAsync()
    {
        return base.Channel.GetWarningsAsync();
    }
}
